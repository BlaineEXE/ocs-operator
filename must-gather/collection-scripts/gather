#!/bin/bash
BASE_COLLECTION_PATH="must-gather"
mkdir -p ${BASE_COLLECTION_PATH}

# Command line argument
SINCE_TIME=$1

# timestamp for starting of the script
START_TIME=$(date +%r)
date1=$(date +%s)
printf "collection started at: %s \n" "${START_TIME}" >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1

# Call pre-install.sh
pre-install.sh

# Call other gather scripts
gather_namespaced_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"
gather_clusterscoped_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"
gather_noobaa_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"

if [ "$(oc get storagecluster -n openshift-storage -o go-template='{{range .items}}{{.spec.externalStorage.enable}}{{"\n"}}{{end}}')" == true ]; then
    echo "Skipping the ceph collection as External Storage is enabled"
elif [ -z "$(oc get storagecluster -n openshift-storage -o go-template='{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}')" ]; then
    echo "Skipping ceph collection as Storage Cluster is not present"
else
    gather_ceph_resources ${BASE_COLLECTION_PATH} "${SINCE_TIME}"
fi

# Call post-uninstall.sh
post-uninstall.sh

# timestamp for ending of the script
END_TIME=$(date +%r)
date2=$(date +%s)
diff=$(("${date2}"-"${date1}"))
printf "collection ended at: %s \n" "${END_TIME}" >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1

# collecting the total time taken by the script script
hrs=$(("${diff}" / 3600 ))
mins=$((("${diff}" % 3600) / 60))
secs=$(("${diff}" % 60))
printf "Total Time is %s hours %s mins and %s seconds \n" "${hrs}" "${mins}" "${secs}" >> ${BASE_COLLECTION_PATH}/gather-debug 2>&1

echo "deleting empty files" >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1
find "${BASE_COLLECTION_PATH}" -empty -delete >> ${BASE_COLLECTION_PATH}/gather-debug.log 2>&1
exit 0
